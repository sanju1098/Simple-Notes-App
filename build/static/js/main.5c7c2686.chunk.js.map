{"version":3,"sources":["components/AddNote.js","components/UpdateNote.js","components/HomePage.js","components/Header.js","App.js","redux/contactReducer.js","index.js"],"names":["connect","state","adnte","dispatch","addNotes","data","type","payload","useState","name","setName","header","setHeader","notes","setNotes","category","setCategory","history","useHistory","className","onSubmit","e","preventDefault","toast","warning","id","length","success","push","localStorage","setItem","JSON","stringify","getItem","placeholder","value","onChange","target","contacts","updateContact","useParams","currentContact","find","contact","parseInt","useEffect","onClick","deleteContact","serachTerm","setSerachTerm","to","class","event","filter","val","toLowerCase","includes","map","note","removeItem","Navbar","App","exact","path","component","initialState","store","createStore","action","contactFilter","contactUpdate","Object","assign","email","phone","composeWithDevTools","rootElement","document","getElementById","ReactDOM","render"],"mappings":"iOA+GeA,eATS,SAACC,GAAD,MAAY,CAClCC,MAAOD,MAEkB,SAACE,GAAD,MAAe,CACxCC,SAAU,SAACC,GACTF,EAAS,CAAEG,KAAM,WAAYC,QAASF,QAI3BL,EA1GC,SAAC,GAAyB,IAAvBE,EAAsB,EAAtBA,MAAOE,EAAe,EAAfA,SAAe,EACnBI,mBAAS,IADU,gCAEfA,mBAAS,KAFM,mBAEhCC,EAFgC,KAE1BC,EAF0B,OAGXF,mBAAS,IAHE,mBAGhCG,EAHgC,KAGxBC,EAHwB,OAIbJ,mBAAS,IAJI,mBAIhCK,EAJgC,KAIzBC,EAJyB,OAKPN,mBAAS,IALF,mBAKhCO,EALgC,KAKtBC,EALsB,KAOjCC,EAAUC,cA8BhB,OACE,sBAAKC,UAAU,kBAAf,UACE,oBAAIA,UAAU,uCAAd,uBACA,qBAAKA,UAAU,MAAf,SACE,qBAAKA,UAAU,8BAAf,SACE,uBAAMC,SAjCO,SAACC,GAGpB,GAFAA,EAAEC,kBAEGX,IAAWF,IAASI,IAAUE,EACjC,OAAOQ,IAAMC,QAAQ,+BAGvB,IAAMnB,EAAO,CACXoB,GAAIvB,EAAMwB,OAAS,EAAIxB,EAAMA,EAAMwB,OAAS,GAAGD,GAAK,EAAI,EACxDd,SACAF,OACAI,QACAE,YAGFX,EAASC,GACTkB,IAAMI,QAAQ,8BACdV,EAAQW,KAAK,KAEbC,aAAaC,QAAQ,OAAQC,KAAKC,UAAU3B,IAC5CwB,aAAaI,QAAQ,SAaf,UACE,qBAAKd,UAAU,aAAf,SACE,uBACEA,UAAU,eACVb,KAAK,OACL4B,YAAY,kBACZC,MAAO1B,EACP2B,SAAU,SAACf,GAAD,OAAOX,EAAQW,EAAEgB,OAAOF,YAGtC,qBAAKhB,UAAU,aAAf,SACE,uBACEA,UAAU,eACVb,KAAK,OACL4B,YAAY,eACZC,MAAOxB,EACPyB,SAAU,SAACf,GAAD,OAAOT,EAAUS,EAAEgB,OAAOF,YAGxC,qBAAKhB,UAAU,aAAf,SACE,yBACEA,UAAU,eACVb,KAAK,OACL6B,MAAOpB,EACPqB,SAAU,SAACf,GAAD,OAAOL,EAAYK,EAAEgB,OAAOF,QAJxC,UAKI,uDACA,4CACA,4CACA,6CACA,iDAGN,qBAAKhB,UAAU,aAAf,SACE,0BACEA,UAAU,eACVb,KAAK,OACL4B,YAAY,gBACZC,MAAOtB,EACPuB,SAAU,SAACf,GAAD,OAAOP,EAASO,EAAEgB,OAAOF,YAGvC,qBAAKhB,UAAU,aAAf,SACE,uBACEA,UAAU,yBACVb,KAAK,SACL6B,MAAM,6BCmCPnC,eATS,SAACC,GAAD,MAAY,CAClCqC,SAAUrC,MAEe,SAACE,GAAD,MAAe,CACxCoC,cAAe,SAAClC,GACdF,EAAS,CAAEG,KAAM,cAAeC,QAASF,QAI9BL,EA1HK,SAAC,GAAiC,IAA/BsC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,cACvBd,EAAOe,cAAPf,GACFR,EAAUC,cACVuB,EAAiBH,EAASI,MAC9B,SAACC,GAAD,OAAaA,EAAQlB,KAAOmB,SAASnB,MAGvCoB,qBAAU,WACRnC,EAAQ+B,EAAehC,MACvBG,EAAU6B,EAAe9B,QACzBG,EAAS2B,EAAe5B,OACxBG,EAAYyB,EAAe1B,YAE1B,CAAC0B,IAb+C,MAe3BjC,mBAAS,IAfkB,mBAe5CC,EAf4C,KAetCC,EAfsC,OAgBvBF,mBAAS,IAhBc,mBAgB5CG,EAhB4C,KAgBpCC,EAhBoC,OAiBzBJ,mBAAS,IAjBgB,mBAiB5CK,EAjB4C,KAiBrCC,EAjBqC,OAkBnBN,mBAAS,IAlBU,mBAkB5CO,EAlB4C,KAkBlCC,EAlBkC,KAgDnD,OACE,qBAAKG,UAAU,YAAf,SACE,sBAAKA,UAAU,yBAAf,UACE,wBACEA,UAAU,4BACV2B,QAAS,kBAAM7B,EAAQW,KAAK,MAF9B,qBAMA,qBAAKT,UAAU,8BAAf,SACGsB,EACC,uBAAMrB,SAvCK,SAACC,GAGpB,GAFAA,EAAEC,kBAEGX,IAAWF,IAASI,IAAUE,EACjC,OAAOQ,IAAMC,QAAQ,+BAGvB,IAAMnB,EAAO,CACXoB,GAAIgB,EAAehB,GACnBd,SACAF,OACAI,QACAE,YAGFwB,EAAclC,GACdkB,IAAMI,QAAQ,gCACdV,EAAQW,KAAK,KAEbC,aAAaC,QAAQ,OAAQC,KAAKC,UAAU3B,IAC5CwB,aAAaI,QAAQ,SAmBb,UACE,qBAAKd,UAAU,aAAf,SACE,uBACEA,UAAU,eACVgB,MAAO1B,EACP2B,SAAU,SAACf,GAAD,OAAOX,EAAQW,EAAEgB,OAAOF,YAGxC,qBAAKhB,UAAU,aAAf,SACE,uBACEA,UAAU,eACVb,KAAK,OACL6B,MAAOxB,EACPyB,SAAU,SAACf,GAAD,OAAOT,EAAUS,EAAEgB,OAAOF,YAGxC,qBAAKhB,UAAU,aAAf,SACE,yBACEA,UAAU,eACVb,KAAK,OACL6B,MAAOpB,EACPqB,SAAU,SAACf,GAAD,OAAOL,EAAYK,EAAEgB,OAAOF,QAJxC,UAKI,uDACA,4CACA,4CACA,6CACA,iDAGN,qBAAKhB,UAAU,aAAf,SACE,0BACEA,UAAU,eACVb,KAAK,OACL6B,MAAOtB,EACPuB,SAAU,SAACf,GAAD,OAAOP,EAASO,EAAEgB,OAAOF,YAGvC,qBAAKhB,UAAU,aAAf,SACE,uBACEA,UAAU,yBACVb,KAAK,SACL6B,MAAM,sBAKV,oBAAIhB,UAAU,cAAd,wCCvBGnB,G,MAAAA,aAVS,SAACC,GAAD,MAAY,CAClCY,MAAOZ,MAGkB,SAACE,GAAD,MAAe,CACxC4C,cAAe,SAACtB,GACdtB,EAAS,CAAEG,KAAM,iBAAkBC,QAASkB,QAIjCzB,EAlFF,SAAC,GAA8B,IAA5Ba,EAA2B,EAA3BA,MAAOkC,EAAoB,EAApBA,cAAoB,EAELvC,mBAAS,IAFJ,mBAElCwC,EAFkC,KAEtBC,EAFsB,KAQzC,OACE,qBAAK9B,UAAU,YAAf,SAEE,sBAAKA,UAAU,yBAAf,UACE,cAAC,IAAD,CAAM+B,GAAG,OAAO/B,UAAU,qCAA1B,uBAIA,sBAAKgC,MAAM,wBAAX,UACE,sBAAMA,MAAM,uCACZ,uBAAO7C,KAAK,OAAO6C,MAAM,eAAejB,YAAY,qCAAqCE,SAAU,SAACgB,GAASH,EAAcG,EAAMf,OAAOF,aAGzItB,EAAMa,OAAS,EACRb,EAAMwC,QAAO,SAACC,GACZ,MAAe,IAAZN,GAEOM,EAAI3C,OAAO4C,cAAcC,SAASR,EAAWO,gBAE7CD,EAAIvC,SAASwC,cAAcC,SAASR,EAAWO,eAHhDD,OAGF,KAIRG,KAAI,SAACC,EAAMjC,GAAP,OACH,qBAAK0B,MAAM,QAAX,SACE,qBAAKA,MAAM,OAAX,SACE,sBAAKA,MAAM,YAAX,UACE,qBAAIA,MAAM,aAAV,UAAwBO,EAAKjD,KAA7B,MAAqC,4BAAIiD,EAAK/C,YAC9C,qBAAIwC,MAAM,aAAV,wBAAmCO,EAAK3C,YACtC,mBAAGoC,MAAM,YAAT,SAAsBO,EAAK7C,QAC3B,cAAC,IAAD,CAAMqC,GAAE,gBAAWQ,EAAKjC,IAAMN,UAAU,wCAAxC,kBACA,wBAAQb,KAAK,SAASmB,GAAG,SAASqB,QAAS,WAlCjEjB,aAAa8B,WAAW,QAkC0DZ,EAAcW,EAAKjC,KAAON,UAAU,kCAAhG,8BAwBV,8BACE,iECtDHyC,EAZA,WACb,OACE,qBAAKzC,UAAU,yBAAf,SACE,qBAAKA,UAAU,6BAAf,SACE,cAAC,IAAD,CAAM+B,GAAI,IAAK/B,UAAU,oBAAzB,oCCaO0C,G,MAXH,WACV,OACE,sBAAK1C,UAAU,MAAf,UACE,cAAC,IAAD,IACA,cAAC,EAAD,IACA,cAAC,IAAD,CAAO2C,OAAK,EAACC,KAAK,IAAIC,UAAW,kBAAM,cAAC,EAAD,OACvC,cAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,OAAOC,UAAW,kBAAM,cAAC,EAAD,OAC1C,cAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,YAAYC,UAAW,kBAAM,cAAC,EAAD,Y,8BChB/CC,EAAe,CACnB,CAAExC,GAAI,EACJhB,KAAM,QACNE,OAAQ,gBACRI,SAAU,SACVF,MAAO,gN,QCSLqD,EAAQC,uBDUgB,WAAmC,IAAlClE,EAAiC,uDAAzBgE,EAAcG,EAAW,uCAC9D,OAAQA,EAAO9D,MACb,IAAK,WAEH,OADAL,EAAK,sBAAOA,GAAP,CAAcmE,EAAO7D,UAE5B,IAAK,iBACH,IAAM8D,EAAgBpE,EAAMoD,QAAO,SAACV,GAAD,OACjCA,EAAQlB,KAAO2C,EAAO7D,QAAU,KAAOoC,KAGzC,OADA1C,EAAQoE,EAEV,IAAK,cACH,IAAMC,EAAgBrE,EAAMoD,QAAO,SAACV,GAAD,OACjCA,EAAQlB,KAAO2C,EAAO7D,QAAQkB,GAC1B8C,OAAOC,OAAO7B,EAASyB,EAAO7D,SAC9BoC,KAGN,OADA1C,EAAQqE,EAEV,IAAK,aAEH,OADArE,EAAQ,CAAC,CAAEQ,KAAM,KAAMgE,MAAO,KAAMC,MAAO,OAE7C,QACE,OAAOzE,KCjC6B0E,iCAEpCC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,IAAD,CAAUd,MAAOA,EAAjB,SACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJU,K","file":"static/js/main.5c7c2686.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { toast } from \"react-toastify\";\n\nconst AddPost = ({ adnte, addNotes }) => {\n  const [id, setId] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [header, setHeader] = useState(\"\");\n  const [notes, setNotes] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n\n  const history = useHistory();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (!header || !name || !notes || !category) {\n      return toast.warning(\"Please fill in all fields!!\");\n    }\n    \n    const data = {\n      id: adnte.length > 0 ? adnte[adnte.length - 1].id + 1 : 0,\n      header,\n      name,\n      notes,\n      category,\n    };\n\n    addNotes(data);\n    toast.success(\"Notes added successfully!!\");\n    history.push(\"/\");\n\n    localStorage.setItem(\"data\", JSON.stringify(data))\n    localStorage.getItem('data');\n    // localStorage.setItem(\"name\", JSON.stringify(name));\n    // localStorage.setItem(\"header\", JSON.stringify(header))\n    // localStorage.setItem(\"notes\", JSON.stringify(notes))\n    // localStorage.setItem(\"category\", JSON.stringify(category))\n\n  };\n\n  return (\n    <div className=\"container-fluid\">\n      <h1 className=\"text-center text-dark py-3 display-2\">Add Notes</h1>\n      <div className=\"row\">\n        <div className=\"col-md-6 p-5 mx-auto shadow\">\n          <form onSubmit={handleSubmit}>\n            <div className=\"form-group\">\n              <input\n                className=\"form-control\"\n                type=\"text\"\n                placeholder=\"Enter Full name\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                className=\"form-control\"\n                type=\"text\"\n                placeholder=\"Enter Header\"\n                value={header}\n                onChange={(e) => setHeader(e.target.value)}\n              />\n            </div>\n            <div className=\"form-group\">\n              <select \n                className=\"form-control\"\n                type=\"text\"\n                value={category}\n                onChange={(e) => setCategory(e.target.value)}>\n                  <option> Select Category </option>\n                  <option>Mobile</option>\n                  <option>Laptop</option>\n                  <option>Desktop</option>\n                  <option>Tablet</option>\n              </select>\n            </div>\n            <div className=\"form-group\">\n              <textarea\n                className=\"form-control\"\n                type=\"text\"\n                placeholder=\"Enter Notes..\"\n                value={notes}\n                onChange={(e) => setNotes(e.target.value)}\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                className=\"btn btn-block btn-dark\"\n                type=\"submit\"\n                value=\"Add Notes\"\n              />\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  adnte: state,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  addNotes: (data) => {\n    dispatch({ type: \"ADD_NOTE\", payload: data });\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddPost);\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useHistory, useParams } from \"react-router\";\nimport { toast } from \"react-toastify\";\n\nconst EditContact = ({ contacts, updateContact }) => {\n  const { id } = useParams();\n  const history = useHistory();\n  const currentContact = contacts.find(\n    (contact) => contact.id === parseInt(id)\n  );\n\n  useEffect(() => {\n    setName(currentContact.name);\n    setHeader(currentContact.header);\n    setNotes(currentContact.notes);\n    setCategory(currentContact.category);\n\n  }, [currentContact]);\n\n  const [name, setName] = useState(\"\");\n  const [header, setHeader] = useState(\"\");\n  const [notes, setNotes] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (!header || !name || !notes || !category) {\n      return toast.warning(\"Please fill in all fields!!\");\n    }\n\n    const data = {\n      id: currentContact.id,\n      header,\n      name,\n      notes,\n      category,\n    };\n\n    updateContact(data);\n    toast.success(\"Notes updated successfully!!\");\n    history.push(\"/\");\n\n    localStorage.setItem(\"data\", JSON.stringify(data))\n    localStorage.getItem('data');\n    // localStorage.setItem(\"name\", JSON.stringify(name));\n    // localStorage.setItem(\"header\", JSON.stringify(header))\n    // localStorage.setItem(\"notes\", JSON.stringify(notes))\n    // localStorage.setItem(\"category\", JSON.stringify(category))\n    \n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"row d-flex flex-column\">\n        <button\n          className=\"btn btn-dark ml-auto my-5\"\n          onClick={() => history.push(\"/\")}\n        >\n          Go back\n        </button>\n        <div className=\"col-md-6 mx-auto shadow p-5\">\n          {currentContact ? (\n            <form onSubmit={handleSubmit}>\n              <div className=\"form-group\">\n                <input\n                  className=\"form-control\"\n                  value={name}\n                  onChange={(e) => setName(e.target.value)}\n                />\n              </div>\n            <div className=\"form-group\">\n              <input\n                className=\"form-control\"\n                type=\"text\"\n                value={header}\n                onChange={(e) => setHeader(e.target.value)}\n              />\n            </div>\n            <div className=\"form-group\">\n              <select \n                className=\"form-control\"\n                type=\"text\"\n                value={category}\n                onChange={(e) => setCategory(e.target.value)}>\n                  <option> Select Category </option>\n                  <option>Mobile</option>\n                  <option>Laptop</option>\n                  <option>Desktop</option>\n                  <option>Tablet</option>\n              </select>\n            </div>\n            <div className=\"form-group\">\n              <textarea\n                className=\"form-control\"\n                type=\"text\"\n                value={notes}\n                onChange={(e) => setNotes(e.target.value)}\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                className=\"btn btn-block btn-dark\"\n                type=\"submit\"\n                value=\"Update Notes\"\n              />\n            </div>\n          </form>\n          ) : (\n            <h1 className=\"text-center\">No Contact Found</h1>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  contacts: state,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  updateContact: (data) => {\n    dispatch({ type: \"UPDATE_NOTE\", payload: data });\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditContact);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport \"./Main.css\";\n\nconst Home = ({ notes, deleteContact }) => {\n\n  const [serachTerm, setSerachTerm] = useState(\"\");\n  \n  const remove = () =>{\n    localStorage.removeItem('data')\n    }\n\n  return (\n    <div className=\"container\">\n    \n      <div className=\"row d-flex flex-column\">\n        <Link to=\"/add\" className=\"btn btn-outline-dark my-5 ml-auto \">\n          Add Notes\n        </Link>\n\n        <div class=\"form-group has-search\">\n          <span class=\"fa fa-search form-control-feedback\"></span>\n          <input type=\"text\" class=\"form-control\" placeholder=\"Search for Header Name or Category\" onChange={(event)=>{setSerachTerm(event.target.value)}}/>\n        </div>\n        \n        {notes.length > 0 ? (\n                notes.filter((val)=>{\n                  if(serachTerm==\"\"){\n                    return val\n                  } else if(val.header.toLowerCase().includes(serachTerm.toLowerCase())){\n                    return val\n                  } else if(val.category.toLowerCase().includes(serachTerm.toLowerCase())){\n                    return val\n                  }\n                })\n                .map((note, id) => (\n                  <div class=\"card-\">\n                    <div class=\"card\">\n                      <div class=\"card-body\">\n                        <h5 class=\"card-title\">{note.name} - <i>{note.header}</i></h5>\n                        <h6 class=\"card-title\">Category:- {note.category}</h6>\n                          <p class=\"card-text\">{note.notes}</p>\n                          <Link to={`/edit/${note.id}`} className=\"btn btn-lg btn-primary btn-block mr-5\">Edit</Link>\n                          <button type=\"button\" id=\"remove\" onClick={() => {remove(); deleteContact(note.id)}}  className=\"btn btn-lg btn-danger btn-block\">Delete</button>\n                      </div>\n                    </div>\n                  </div> \n          /* <div class=\"container\">\n          <div class=\"row\">\n          <div class=\"col-3\">\n          <div class=\"card-deck\">\n          <div class=\"card\">\n          <div class=\"card-body\">\n          <h5 class=\"card-title\">{note.name} - <i>{note.header}</i></h5>\n          <h6 class=\"card-title\">Category:- {note.category}</h6>\n          <p class=\"card-text\">{note.notes}</p>\n          </div>\n          </div>\n          <div class=\"w-100 py-2\"></div>\n          </div></div></div></div>\n          <div class=\"card-columns\">\n          <div class=\"card\">\n          <h5 class=\"\">{note.name} - <i>{note.header}</i></h5>\n          <h6 class=\"\">Category:- {note.category}</h6>\n          <p class=\"\">{note.notes}</p>\n          </div></div> */\n          ))) : (\n                <div>\n                  <h3>No Notes for Now..!!</h3>\n                </div>\n              )}\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  notes: state,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  deleteContact: (id) => {\n    dispatch({ type: \"DELETE_CONTACT\", payload: id });\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Navbar = () => {\n  return (\n    <div className=\"col-md-12 bg-dark py-2\">\n      <nav className=\"navbar bg-dark navbar-dark\">\n        <Link to={\"/\"} className=\"navbar-brand ml-5\">\n          Notes App - React\n        </Link>\n      </nav>\n    </div>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport AddPost from \"./components/AddNote\";\nimport EditContact from \"./components/UpdateNote\";\nimport Home from \"./components/HomePage\";\nimport Navbar from \"./components/Header\";\nimport \"./styles.css\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <ToastContainer />\n      <Navbar />\n      <Route exact path=\"/\" component={() => <Home />} />\n      <Route exact path=\"/add\" component={() => <AddPost />} />\n      <Route exact path=\"/edit/:id\" component={() => <EditContact />} />\n    </div>\n  );\n};\nexport default App;\n","const initialState = [\n  { id: 0, \n    name: \"Admin\", \n    header: \"My first note\", \n    category: \"Mobile\",\n    notes: \"Lorem ipsum dolor sit amet. Aut officia quisquam aut accusantium dolores ea unde consequuntur et quas dolores et quia animi et saepe corrupti ad fugit enim. Ea nesciunt tempore quo omnis et quam nostrum.\" \n  },\n\n  // // { id: 2, \n  // //   name: \"Player\", \n  // //   header: \"My Note 2\", \n  // //   category: \"Desktop\",\n  // //   notes: \"Lorem ipsum dolor sit amet. Aut officia quisquam aut accusantium dolores ea unde consequuntur et quas dolores et quia animi et saepe corrupti ad fugit enim. Ea nesciunt tempore quo omnis et quam nostrum.\" \n  // // },\n\n  // // { id: 3, \n  // //   name: \"Abcdef\", \n  // //   header: \"3rd Notes\", \n  // //   category: \"Desktop\",\n  // //   notes: \"Lorem ipsum dolor sit amet. Aut officia quisquam aut accusantium dolores ea unde consequuntur et quas dolores et quia animi et saepe corrupti ad fugit enim. Ea nesciunt tempore quo omnis et quam nostrum.\" \n  // // },\n\n];\n\nexport const contactReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"ADD_NOTE\":\n      state = [...state, action.payload];\n      return state;\n    case \"DELETE_CONTACT\":\n      const contactFilter = state.filter((contact) =>\n        contact.id === action.payload ? null : contact\n      );\n      state = contactFilter;\n      return state;\n    case \"UPDATE_NOTE\":\n      const contactUpdate = state.filter((contact) =>\n        contact.id === action.payload.id\n          ? Object.assign(contact, action.payload)\n          : contact\n      );\n      state = contactUpdate;\n      return state;\n    case \"RESET_NOTE\":\n      state = [{ name: null, email: null, phone: null }];\n      return state;\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport App from \"./App\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { contactReducer } from \"./redux/contactReducer\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nconst store = createStore(contactReducer, composeWithDevTools());\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  rootElement\n);\n"],"sourceRoot":""}